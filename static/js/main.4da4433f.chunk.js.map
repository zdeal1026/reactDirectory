{"version":3,"sources":["components/Employees.js","components/search.js","utils/API.js","components/directory.js","App.js","reportWebVitals.js","index.js"],"names":["Employees","props","dob","date","dateArray","split","year","join","formatDate","className","alt","firstName","src","icon","lastName","phone","address","email","Search","placeholder","name","type","onChange","event","startSort","getEmployees","axios","get","Directory","state","employees","empSort","search","sorted","componentDidMount","API","then","results","setState","data","sortEmployees","filter","first","toLowerCase","includes","last","target","value","render","label","map","employee","picture","medium","location","street","number","id","city","postcode","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4da4433f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Employees = (props) => {\r\n  function formatDate(date) {\r\n    const dateArray = date.split(\"-\");\r\n    const year = dateArray[0];\r\n    const month = dateArray[1];\r\n    const dayArray = dateArray[2].split(\"T\");\r\n    const day = dayArray[0];\r\n    const formattedDate = [month, day, year].join(\"-\");\r\n    return formattedDate;\r\n  }\r\n\r\n  let dob = formatDate(props.dob);\r\n\r\n  return (\r\n    <tr className=\"tr\">\r\n      <td>\r\n        <img alt={props.firstName} src={props.icon} />\r\n      </td>\r\n      <td>\r\n        {props.lastName} {props.firstName}\r\n      </td>\r\n      <td>{dob}</td>\r\n      <td>{props.phone} </td>\r\n      <td>{props.address}</td>\r\n      <td>{props.email}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Employees;\r\n","import React from \"react\";\r\n\r\nconst Search = (props) => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center mx-auto\">\r\n      <form>\r\n        <input\r\n          placeholder=\"Search\"\r\n          name=\"search\"\r\n          type=\"text\"\r\n          className=\"form-control-lg search-font mx-auto\"\r\n          onChange={(event) => props.startSort(event)}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import axios from \"axios\";\r\n\r\nconst getEmployees = {\r\n  getEmployees: function () {\r\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n  },\r\n};\r\n\r\nexport default getEmployees;\r\n","import React, { Component } from \"react\";\r\nimport Employees from \"./Employees.js\";\r\nimport Search from \"./search.js\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Directory extends Component {\r\n  state = {\r\n    employees: [],\r\n    empSort: [],\r\n    search: \"\",\r\n    sorted: false,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    API.getEmployees().then((results) => {\r\n      this.setState({\r\n        employees: results.data.results,\r\n      });\r\n    });\r\n  };\r\n\r\n  sortEmployees = () => {\r\n    let { employees, search } = this.state;\r\n    let empSort = employees.filter((sorted) => {\r\n      return (\r\n        sorted.name.first.toLowerCase().includes(search.toLowerCase()) ||\r\n        sorted.name.last.toLowerCase().includes(search.toLowerCase()) ||\r\n        sorted.email.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    });\r\n    this.setState({ empSort });\r\n  };\r\n\r\n  startSort = (event) => {\r\n    this.setState({ search: event.target.value }, () => {\r\n      this.sortEmployees();\r\n      this.setState({ sorted: true });\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"background\">\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n          <h2 className=\"display-4\">Employee Directory</h2>\r\n          <p> Search employee by name or email.</p>\r\n          <Search name=\"search\" startSort={this.startSort} label=\"Search\" />\r\n        </div>\r\n\r\n        <div className=\"container-fluid\">\r\n          <table className=\"table table-dark table-striped table-hover table-bordered table-condensed\">\r\n            <thead className=\"thead\">\r\n              <tr>\r\n                <th>Image</th>\r\n                <th>Name</th>\r\n                <th>Date of Birth</th>\r\n                <th>Phone</th>\r\n                <th>Address</th>\r\n                <th>Email</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {!this.state.sorted\r\n                ? this.state.employees.map((employee) => (\r\n                    <Employees\r\n                      key={employee.id.value}\r\n                      firstName={employee.name.first}\r\n                      lastName={employee.name.last}\r\n                      phone={employee.phone}\r\n                      email={employee.email}\r\n                      icon={employee.picture.medium}\r\n                      dob={employee.dob.date}\r\n                      address={\r\n                        employee.location.street.number +\r\n                        \" \" +\r\n                        employee.location.street.name +\r\n                        \", \" +\r\n                        employee.location.city +\r\n                        \", \" +\r\n                        employee.location.state +\r\n                        \" \" +\r\n                        employee.location.postcode\r\n                      }\r\n                    />\r\n                  ))\r\n                : this.state.empSort.map((employee) => (\r\n                    <Employees\r\n                      key={employee.id.value}\r\n                      firstName={employee.name.first}\r\n                      lastName={employee.name.last}\r\n                      phone={employee.phone}\r\n                      email={employee.email}\r\n                      icon={employee.picture.medium}\r\n                      dob={employee.dob.date}\r\n                      address={\r\n                        employee.location.street.number +\r\n                        employee.location.street.name\r\n                      }\r\n                    />\r\n                  ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Directory;\r\n","import React from \"react\";\nimport Directory from \"./components/directory.js\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Directory />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}